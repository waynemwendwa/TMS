generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User Management
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  role      UserRole
  passwordHash String?
  phone     String?
  poBox     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  inventoryLogs   InventoryLog[]

  @@map("users")
}

enum UserRole {
  SITE_SUPERVISOR
  PROCUREMENT
  SUPPLIER
  CHAIRMAN
  CHAIRMAN_PA
}

// Inventory Management
model Inventory {
  id          String   @id @default(cuid())
  name        String
  description String?
  category    String
  location    String?
  minStock    Int      @default(0)
  maxStock    Int?
  currentStock Int     @default(0)
  unit        String
  unitPrice   Decimal? @db.Decimal(15, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  logs        InventoryLog[]

  @@map("inventory")
}

model InventoryLog {
  id          String   @id @default(cuid())
  type        InventoryLogType
  quantity    Int
  previousStock Int
  newStock    Int
  remarks     String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  inventoryId String
  inventory   Inventory @relation(fields: [inventoryId], references: [id], onDelete: Cascade)
  userId      String
  user        User @relation(fields: [userId], references: [id])

  @@map("inventory_logs")
}

enum InventoryLogType {
  IN
  OUT
  ADJUSTMENT
  TRANSFER
}